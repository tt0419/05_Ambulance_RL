ルールベースディスパッチ戦略検討履歴と判明事実

1. 検討した戦略と基本特徴
ClosestAmbulanceStrategy（ベースライン）

概念: 現行システム、最寄り救急車選択
性能: 全体応答時間7.13分、重症系6分達成率38-39%
特徴: シンプルで安定、改善効果なし

SeverityBasedStrategy（傷病度考慮）

概念: 重症系=最寄り、軽症系=カバレッジ考慮の2分類
実装: カバレッジ損失計算による最適化
特徴: 理論的根拠が明確、実装が適度に複雑

AdvancedSeverityStrategy（高度傷病度）

当初概念: 4段階傷病度分類による精密制御
現実: 設計破綻により大幅性能悪化
最終形: SeverityBasedStrategy継承による修正

SecondRideStrategy（2番目選択）

概念: 軽症系に2番目に近い救急車を配車
性能: 統計的有意差なし（p=0.6704）
位置づけ: 概念実証用、移行期戦略

2. 実験結果から判明した重要事実
稼働率パターンの発見

低稼働率時間帯: 深夜2-7時（平均33.7%）
高稼働率時間帯: 日中10-20時（平均77.8%）
中稼働率時間帯: 移行時間帯（平均57.0%）
救急車稼働率分布: 21.1%-91.6%の大きな格差

戦略効果の限界

SecondRideStrategy: 微改善のみ、統計的有意差なし
複雑な戦略の落とし穴: AdvancedSeverityStrategyの当初設計が完全破綻
軽症系への影響: カバレッジ理論の過度適用で大幅悪化（12.73分）

設計原則の確立

重症系: 直近隊運用が最適（距離が支配的要因）
軽症系: 稼働率に応じた動的戦略が有効
実装の複雑さ: 過度な複雑化は予期しない副作用を招く

3. 失敗から学んだ設計上の教訓
AdvancedSeverityStrategy失敗の分析

軽症系18分制限: 現実離れした設定
10分以上救急車の積極活用: 極端すぎる制約
4段階分類の過度な複雑化: 予測困難な動作
稼働率閾値の不適切設定: 東京の実情（平均59.8%）を無視

修正プロセスの問題

パラメータ調整の限界: 根本的設計欠陥はパラメータでは解決不可
段階的修正の無効性: 複数回の修正でも改善されず
継承による解決: SeverityBasedStrategy継承で基本機能を確保

4. 稼働率と戦略効果の関係
仮説の検証結果

低稼働率時: カバレッジ最適化戦略が有効
高稼働率時: 直近隊運用が最効率
戦略切り替え閾値: 75%程度が適切

地域・時間特性

救急車分布: 高稼働率車両20.3%、低稼働率車両38.0%
時間帯パターン: 11時間連続の高稼働率（10-20時）
稼働率による影響: 戦略効果は稼働率に強く依存

5. 実用的設計指針の確立
有効な戦略設計
重症系（重症・重篤・死亡）→ 直近隊運用
軽症系（軽症・中等症）→ 稼働率による動的切り替え
　高稼働率時（>75%）→ 直近隊運用
　低稼働率時（≤75%）→ カバレッジ考慮
実装上の重要ポイント

継承の活用: コード重複を避け、既存機能を活用
段階的導入: 急激な変化を避ける
安全性担保: フォールバック機能の確保

6. 残された課題と今後の方向性
技術的課題

最適な稼働率閾値: 75%の妥当性検証
カバレッジ計算の精度: より現実的なモデル
時間帯別パラメータ: さらなる細分化の可能性

運用面の考慮

現場受容性: 運用者の理解と習熟
システム統合: 既存システムとの連携
効果測定: 継続的な性能監視体制

この検討過程により、理論と実践のバランスを取った現実的な戦略設計の重要性が明確になりました。